{"version":3,"sources":["../../src/components/DoughnutChart/DoughnutChart.tsx","examples/Doughnut.tsx","examples/index.tsx","types/Types.tsx","App.tsx","index.tsx"],"names":["DEFAULT_COLORS","DEFAULT_OPTIONS","cutoutPercentage","responsive","legend","position","labels","usePointStyle","fontSize","padding","generateColor","color","opacity","DoughnutChart","selectedIndex","chartColors","chartOptions","dataset","highlightLevel","DEFAULT_HIGHLIGHT_LEVEL","borders","useMemo","highlighted","colors","c","data","total","p","datasets","backgroundColor","hoverBorderColor","hoverBackgroundColor","borderWidth","hoverBorderWidth","l","options","Doughnut","useState","setSelectedIndex","className","value","onChange","target","map","v","i","key","DoughnutExample","Examples","Types","App","id","type","name","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4dda5113.chunk.js","sourcesContent":["import { ChartOptions } from 'chart.js';\nimport React, { useMemo } from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport { ChartRGBColor, DoughnutChartOptions } from '../../types';\n\n\ntype DoughnutChartProps = {\n  chartColors?: ChartRGBColor[],\n  chartOptions?: ChartOptions,\n  dataset: number[],\n  labels: string[],\n  highlightLevel?: number,\n  selectedIndex?: number[]\n}\n\nconst DEFAULT_INITIAL_BORDER = 10\nconst DEFAULT_HIGHLIGHT_LEVEL = 6\nconst DEFAULT_COLORS: ChartRGBColor[] = [\n  [107, 108, 139],\n  [36, 37, 46],\n  [254, 215, 1]\n]\n\nconst TRANSPARENT = 'rgba(0,0,0,0)'\n\nconst DEFAULT_OPTIONS: DoughnutChartOptions = {\n  cutoutPercentage: 50,\n  responsive: true,\n  legend: {\n    position: 'left',\n    labels: {\n      usePointStyle: true,\n      fontSize: 16,\n      padding: 20\n    }\n  },\n}\n\nconst generateColor = (color: ChartRGBColor, opacity = 1) => {\n  return `rgba(${[...color, opacity].join(', ')})`\n}\n\nexport const DoughnutChart = ({ selectedIndex = [], chartColors = DEFAULT_COLORS, chartOptions = DEFAULT_OPTIONS, dataset = [], labels = [], highlightLevel = DEFAULT_HIGHLIGHT_LEVEL }: DoughnutChartProps) => {\n\n  const borders = useMemo(() => {\n    const highlighted = DEFAULT_INITIAL_BORDER + highlightLevel\n    return labels.map((_, i) => selectedIndex.includes(i) || !selectedIndex.length ? DEFAULT_INITIAL_BORDER : highlighted)\n  }, [selectedIndex, labels])\n\n  const colors = useMemo(() => {\n    return chartColors.map((c, i) => selectedIndex.includes(i) || !selectedIndex.length ? generateColor(c) : generateColor(c, 0.6))\n\n  }, [selectedIndex])\n\n\n  const data = useMemo(() => {\n    const total = dataset.reduce((p, c) => p + c, 0)\n\n    return {\n      datasets: [{\n        data: dataset,\n        backgroundColor: colors,\n        hoverBorderColor: [\n          TRANSPARENT,\n          TRANSPARENT,\n          TRANSPARENT\n        ],\n        hoverBackgroundColor: colors,\n        borderWidth: borders,\n        hoverBorderWidth: [0, 0, 0]\n      }],\n      labels: labels.map((l, i) => {\n        return `${l} (${(dataset[i] / total * 100).toFixed()} %)`\n      })\n    }\n  }, [dataset, labels, colors])\n\n  const options = useMemo(() => {\n    return {\n      ...DEFAULT_OPTIONS,\n      ...chartOptions\n    }\n  }, [chartOptions])\n\n  return (\n    <Doughnut data={data} options={options} />\n  )\n}\n","import React, { ChangeEvent, useState } from 'react'\nimport { DoughnutChart } from 'aesthetic-charts'\n\n\nconst Doughnut = () => {\n  const [selectedIndex, setSelectedIndex] = useState<number[]>([])\n\n  const data = [50, 100, 75]\n  const labels = ['Mobile', 'Tablet', 'Desktop']\n\n  const chartOptions = {\n    legend: {\n      labels: {\n        fontSize: 16,\n        usePointStyle: true,\n        padding: 10\n      },\n      position: 'left' as 'left'\n    }\n  }\n\n  const handleChange = ({ target: { value } }: ChangeEvent<HTMLSelectElement>) =>\n    setSelectedIndex(value ? [+value] : [])\n\n  return (\n    <>\n      <div className=\"row\">\n        <label>Select Device</label>\n        <select value={selectedIndex[0]} onChange={handleChange}>\n          <option>All</option>\n          {\n            [\n              'Mobile',\n              'Tablet',\n              'Desktop',\n            ].map((v, i) => <option value={i} key={i}>{v}</option>)\n          }\n        </select>\n      </div>\n      <div className=\"row\">\n        <DoughnutChart dataset={data} labels={labels} selectedIndex={selectedIndex} chartOptions={chartOptions} />\n      </div>\n    </>\n  )\n}\n\nexport const DoughnutExample = () => {\n\n  return (\n    <div className=\"example paper\">\n      <h4>Doughnut Example</h4>\n      <Doughnut />\n    </div>\n  )\n\n}","import React from 'react'\nimport { DoughnutExample } from './Doughnut'\n\nexport const Examples = () => {\n\n  return <div className=\"examples\">\n    <h2>Examples</h2>\n    <DoughnutExample />\n  </div>\n}","import React from 'react'\n\nexport const Types = () => {\n\n  return <div className=\"paper\">\n    <pre>\n      <code>\n        const a = \"Hello World\"\n\n      </code>\n    </pre>\n  </div>\n}","import React from 'react'\nimport { Examples } from './examples'\n\n\nimport './index.css'\nimport { Types } from './types/Types'\n\nconst App = () => {\n\n\n  return <div className=\"app paper container\">\n    <h1>Aesthetic Charts</h1>\n\n    <div className=\"row flex-spaces tabs\">\n      <input id=\"tab1\" type=\"radio\" name=\"tabs\" />\n      <label htmlFor=\"tab1\">Installation</label>\n\n      <input id=\"tab2\" type=\"radio\" name=\"tabs\" />\n      <label htmlFor=\"tab2\">Documentation</label>\n\n      <input id=\"tab3\" type=\"radio\" name=\"tabs\" />\n      <label htmlFor=\"tab3\">Examples</label>\n\n      <input id=\"tab4\" type=\"radio\" name=\"tabs\" />\n      <label htmlFor=\"tab4\">Roadmap</label>\n\n      <div className=\"content\" id=\"content1\">\n        <h2>Installation Notes</h2>\n      </div>\n      <div className=\"content\" id=\"content2\">\n        <h2>Documentation</h2>\n      </div>\n      <div className=\"content\" id=\"content3\">\n        <Examples />\n\n      </div>\n      <div className=\"content\" id=\"content4\">\n        <h2>Types</h2>\n        <Types />\n      </div>\n    </div>\n\n  </div>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}